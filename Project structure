# ูุดุฑูุน RAG ุงููุชูุฏู - Agentic RAG System

## ูููู ุงููุดุฑูุน

```
rag-project/
โโโ README.md
โโโ requirements.txt
โโโ .env.example
โโโ .gitignore
โโโ main.py
โโโ src/
โ   โโโ __init__.py
โ   โโโ document_processor.py
โ   โโโ vector_store.py
โ   โโโ llm_interface.py
โ   โโโ rag_pipeline.py
โ   โโโ agents/
โ       โโโ __init__.py
โ       โโโ planning_agent.py
โ       โโโ retrieval_agent.py
โ       โโโ synthesis_agent.py
โโโ data/
โ   โโโ documents/
โ   โโโ processed/
โโโ tests/
โ   โโโ __init__.py
โ   โโโ test_rag_pipeline.py
โโโ notebooks/
โ   โโโ demo.ipynb
โโโ config/
    โโโ config.yaml
```

## ููู README.md

```markdown
# ูุธุงู RAG ุงููุชูุฏู ูุน ุงููููุงุก ุงูุฐูููู ๐ฅ

ูุธุงู ุงุณุชุฑุฌุงุน ูุชูููุฏ ูุนุฒุฒ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุณุชุฎุฏู ุชูููุฉ Agentic RAG ูุชูููุฑ ุฅุฌุงุจุงุช ุฏูููุฉ ููุญุฏุซุฉ.

## ุงููููุฒุงุช

โ **ุญููุฉ ุชูุฑุงุฑูุฉ ูุญุณูุฉ**: ุชุคุฏู ูุฅุฌุงุจุงุช ุฃูุซุฑ ูุถูุญุงู ูุฏูุฉ ุฃูุถู  
โ **ุชุญูู ูุจู ุงูุฅูุดุงุก**: ูุถูู ุทุจูุฉ ูู ุงูุชุญูู ูุชูููู ุงูุฃุฎุทุงุก  
โ **ุชูููู ุงูุฅุฌุงุจุงุช ุบูุฑ ุฐุงุช ุงูุตูุฉ**: ููุชุฑุฉ ุฐููุฉ ูููุญุชูู  
โ **LLMs ุฃูู ุณุฐุงุฌุฉ**: ููุงุฐุฌ ุฃูุซุฑ ุญุฐุฑุงู ูุฐูุงุกู  
โ **ูุซุงูู ููุงุณุชุนูุงูุงุช ุงููุนูุฏุฉ**: ูุฏุนู ุงูุชูููุฑ ูุชุนุฏุฏ ุงูุฎุทูุงุช  

## ุงูุชูููุงุช ุงููุณุชุฎุฏูุฉ

- **Python 3.8+**
- **LangChain**: ูุจูุงุก pipeline ุงูู RAG
- **ChromaDB**: ูุงุนุฏุฉ ุจูุงูุงุช ุงููุชุฌูุงุช
- **OpenAI GPT**: ูููุฐุฌ ุงููุบุฉ ุงูุฃุณุงุณู
- **Streamlit**: ูุงุฌูุฉ ุงููุณุชุฎุฏู
- **FastAPI**: API ูููุดุฑูุน

## ุงูุชุซุจูุช ูุงูุชุดุบูู

### 1. ุงุณุชูุณุงุฎ ุงููุดุฑูุน
```bash
git clone https://github.com/yourusername/advanced-rag-system.git
cd advanced-rag-system
```

### 2. ุฅูุดุงุก ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ
```bash
python -m venv venv
source venv/bin/activate  # Linux/Mac
# ุฃู
venv\Scripts\activate     # Windows
```

### 3. ุชุซุจูุช ุงููุชุทูุจุงุช
```bash
pip install -r requirements.txt
```

### 4. ุฅุนุฏุงุฏ ูุชุบูุฑุงุช ุงูุจูุฆุฉ
```bash
cp .env.example .env
# ุฃุถู ููุงุชูุญ API ุงูุฎุงุตุฉ ุจู ูู ููู .env
```

### 5. ุชุดุบูู ุงููุธุงู
```bash
# ุชุดุบูู ูุงุฌูุฉ Streamlit
streamlit run main.py

# ุฃู ุชุดุบูู API
uvicorn src.api:app --reload
```

## ููููุฉ ุงูุงุณุชุฎุฏุงู

### 1. ุฑูุน ุงููุณุชูุฏุงุช
```python
from src.rag_pipeline import RAGPipeline

rag = RAGPipeline()
rag.load_documents("path/to/your/documents")
```

### 2. ุทุฑุญ ุงูุฃุณุฆูุฉ
```python
response = rag.query("ูุง ูู ุฃูู ุงูููุงุท ูู ุงููุณุชูุฏุ")
print(response)
```

## ูุนูุงุฑูุฉ ุงููุธุงู

### ูููู ุงูุชุฎุทูุท (Planning Agent)
- ูุญูู ุงูุงุณุชุนูุงู ููุฎุทุท ูุงุณุชุฑุงุชูุฌูุฉ ุงูุงุณุชุฑุฌุงุน
- ููุณู ุงูุฃุณุฆูุฉ ุงููุนูุฏุฉ ูุฃุฌุฒุงุก ุฃุตุบุฑ

### ูููู ุงูุงุณุชุฑุฌุงุน (Retrieval Agent)
- ูุจุญุซ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุนู ุงููุนูููุงุช ุฐุงุช ุงูุตูุฉ
- ูุทุจู ููุงุชุฑ ุฐููุฉ ูุชุญุณูู ุงููุชุงุฆุฌ

### ูููู ุงูุชุฑููุจ (Synthesis Agent)
- ูุฏูุฌ ุงููุนูููุงุช ูู ูุตุงุฏุฑ ูุชุนุฏุฏุฉ
- ูุชุญูู ูู ุตุญุฉ ุงูุฅุฌุงุจุงุช ูุจู ุงูุชูุฏูู

## ุงููุณุงููุฉ

ูุฑุญุจ ุจูุณุงููุงุชูู! ูุฑุฌู:
1. Fork ุงููุดุฑูุน
2. ุฅูุดุงุก branch ุฌุฏูุฏ (`git checkout -b feature/amazing-feature`)
3. Commit ุงูุชุบููุฑุงุช (`git commit -m 'Add amazing feature'`)
4. Push ุฅูู Branch (`git push origin feature/amazing-feature`)
5. ูุชุญ Pull Request

## ุงูุชุฑุฎูุต

ูุฐุง ุงููุดุฑูุน ูุฑุฎุต ุชุญุช ุฑุฎุตุฉ MIT - ุฑุงุฌุน ููู [LICENSE](LICENSE) ููุชูุงุตูู.

## ุงูุชูุงุตู

- **ุงููุทูุฑ**: [ุงุณูู]
- **ุงูุจุฑูุฏ ุงูุฅููุชุฑููู**: [ุจุฑูุฏู ุงูุฅููุชุฑููู]
- **LinkedIn**: [ุฑุงุจุท LinkedIn]

---
โญ ุฅุฐุง ุฃุนุฌุจู ุงููุดุฑูุนุ ูุง ุชูุณ ุฅุนุทุงุคู ูุฌูุฉ!
```

## ููู requirements.txt

```txt
langchain==0.1.0
langchain-openai==0.0.5
langchain-community==0.0.10
chromadb==0.4.22
streamlit==1.29.0
fastapi==0.104.1
uvicorn==0.24.0
python-dotenv==1.0.0
pydantic==2.5.0
tiktoken==0.5.2
openai==1.6.0
numpy==1.24.3
pandas==2.0.3
python-multipart==0.0.6
aiofiles==23.2.1
```

## ููู .env.example

```env
# OpenAI API Key
OPENAI_API_KEY=your_openai_api_key_here

# Pinecone (ุงุฎุชูุงุฑู)
PINECONE_API_KEY=your_pinecone_key
PINECONE_ENVIRONMENT=your_environment

# Hugging Face (ุงุฎุชูุงุฑู)
HUGGINGFACE_API_KEY=your_hf_key

# ุฅุนุฏุงุฏุงุช ุงููุธุงู
MAX_TOKENS=4000
TEMPERATURE=0.1
MODEL_NAME=gpt-4-turbo-preview
```

## ููู .gitignore

```gitignore
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment
venv/
env/
ENV/

# Environment Variables
.env
.env.local
.env.production

# Data
data/documents/*
!data/documents/.gitkeep
data/processed/*
!data/processed/.gitkeep

# Logs
*.log
logs/

# ChromaDB
chroma_db/

# Jupyter Notebooks
.ipynb_checkpoints

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db
```

ูุฐุง ูู ุงููููู ุงูุฃุณุงุณู ููุดุฑูุนู! ูู ุชุฑูุฏูู ุฃู ุฃูุดุฆ ูู ุงูููุฏ ุงููุนูู ูููููุงุช ุงูุฃุณุงุณูุฉุ
